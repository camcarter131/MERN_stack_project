{"ast":null,"code":"import Sprite from \"../player/sprite\";\n\nclass SpriteSheet {\n  constructor(img, config) {\n    this.img = img;\n    this.config = config || {\n      rows: 0,\n      cols: 0\n    };\n    this.frame = {\n      width: Math.floor(this.img.width / (this.config.cols || 1)),\n      height: Math.floor(this.img.height / (this.config.rows || 1))\n    }; // debugger;\n  }\n\n  generateSprites() {\n    // debugger;\n    // this.tmpCanvas = new OffscreenCanvas(this.img.width, this.img.height);\n    // this.tmpcc = this.tmpCanvas.getContext('2d');\n    // this.tmpcc.drawImage(this.img, 0, 0);\n    const output = [];\n    const c = new OffscreenCanvas(this.img.width, this.img.height); // const c = document.createElement('canvas');\n    // c.width = this.img.width;\n    // c.height = this.img.height;\n\n    const cc = c.getContext('2d');\n    cc.drawImage(this.img, 0, 0, 128, 128, 0, 0, 32, 32);\n    let imgData = cc.getImageData(0, 0, 32, 32); // for (let i = 0; i < this.img.width / 32; i++) {\n    //     for (let j = 0; j < this.img.height / 32; i++) {\n    //         let imgData = cc.getImageData(i * this.frame.width,\n    //             j * this.frame.height,\n    //             this.frame.width,\n    //             this.frame.height\n    //         );\n    //         output.push(new Sprite(imgData, `bomber_${i}_${j}`));\n    //         debugger;\n    //     }\n    // }\n\n    output.push(imgData); // debugger;\n\n    return output;\n  }\n\n}\n\nexport default SpriteSheet;","map":{"version":3,"sources":["/home/aseemar/Desktop/JS_Projects/MERN_stack_project/frontend/src/bummerman/animator/spritesheet.js"],"names":["Sprite","SpriteSheet","constructor","img","config","rows","cols","frame","width","Math","floor","height","generateSprites","output","c","OffscreenCanvas","cc","getContext","drawImage","imgData","getImageData","push"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,WAAW,CAACC,GAAD,EAAMC,MAAN,EAAc;AACrB,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKC,MAAL,GAAcA,MAAM,IAAI;AACpBC,MAAAA,IAAI,EAAE,CADc;AAEpBC,MAAAA,IAAI,EAAE;AAFc,KAAxB;AAIA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAW,KAAKP,GAAL,CAASK,KAAT,IAAkB,KAAKJ,MAAL,CAAYE,IAAZ,IAAoB,CAAtC,CAAX,CADE;AAETK,MAAAA,MAAM,EAAEF,IAAI,CAACC,KAAL,CAAW,KAAKP,GAAL,CAASQ,MAAT,IAAmB,KAAKP,MAAL,CAAYC,IAAZ,IAAoB,CAAvC,CAAX;AAFC,KAAb,CANqB,CAUrB;AACH;;AAEDO,EAAAA,eAAe,GAAG;AACd;AACA;AACA;AAEA;AAEA,UAAMC,MAAM,GAAG,EAAf;AAEA,UAAMC,CAAC,GAAG,IAAIC,eAAJ,CAAoB,KAAKZ,GAAL,CAASK,KAA7B,EAAoC,KAAKL,GAAL,CAASQ,MAA7C,CAAV,CATc,CAUd;AACA;AACA;;AACA,UAAMK,EAAE,GAAGF,CAAC,CAACG,UAAF,CAAa,IAAb,CAAX;AACAD,IAAAA,EAAE,CAACE,SAAH,CAAa,KAAKf,GAAlB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,GAA7B,EAAkC,GAAlC,EAAuC,CAAvC,EAA0C,CAA1C,EAA6C,EAA7C,EAAiD,EAAjD;AAEA,QAAIgB,OAAO,GAAGH,EAAE,CAACI,YAAH,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,EAA1B,CAAd,CAhBc,CAiBd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAP,IAAAA,MAAM,CAACQ,IAAP,CAAYF,OAAZ,EA5Bc,CA6Bd;;AAEA,WAAON,MAAP;AACH;;AA9Ca;;AAiDlB,eAAeZ,WAAf","sourcesContent":["import Sprite from \"../player/sprite\";\n\nclass SpriteSheet {\n    constructor(img, config) {\n        this.img = img;\n        this.config = config || {\n            rows: 0,\n            cols: 0\n        };\n        this.frame = {\n            width: Math.floor(this.img.width / (this.config.cols || 1)),\n            height: Math.floor(this.img.height / (this.config.rows || 1))\n        };\n        // debugger;\n    }\n\n    generateSprites() {\n        // debugger;\n        // this.tmpCanvas = new OffscreenCanvas(this.img.width, this.img.height);\n        // this.tmpcc = this.tmpCanvas.getContext('2d');\n\n        // this.tmpcc.drawImage(this.img, 0, 0);\n\n        const output = [];\n\n        const c = new OffscreenCanvas(this.img.width, this.img.height);\n        // const c = document.createElement('canvas');\n        // c.width = this.img.width;\n        // c.height = this.img.height;\n        const cc = c.getContext('2d');\n        cc.drawImage(this.img, 0, 0, 128, 128, 0, 0, 32, 32);\n\n        let imgData = cc.getImageData(0, 0, 32, 32);\n        // for (let i = 0; i < this.img.width / 32; i++) {\n        //     for (let j = 0; j < this.img.height / 32; i++) {\n        //         let imgData = cc.getImageData(i * this.frame.width,\n        //             j * this.frame.height,\n        //             this.frame.width,\n        //             this.frame.height\n        //         );\n        //         output.push(new Sprite(imgData, `bomber_${i}_${j}`));\n        //         debugger;\n        //     }\n        // }\n        output.push(imgData);\n        // debugger;\n\n        return output;\n    }\n}\n\nexport default SpriteSheet;"]},"metadata":{},"sourceType":"module"}