{"ast":null,"code":"import Sprite from \"../player/sprite\";\n\nclass Animator {\n  constructor(ctx, spriteSheet) {\n    this.assets = {};\n    this.animations = {};\n    this.ctx = ctx;\n    this.generateSprites(spriteSheet);\n  }\n\n  generateSprites(spriteSheet) {\n    for (let i = 0; i < spriteSheet.config.rows; i++) {\n      for (let j = 0; j < spriteSheet.config.cols; j++) {\n        // debugger;\n        createImageBitmap(spriteSheet.img, // img data\n        i * spriteSheet.frame.width, // sx: \n        j * spriteSheet.frame.height, // sy:\n        spriteSheet.frame.width, // sw:\n        spriteSheet.frame.height // sh:\n        ).then(res => {\n          const sprite = new Sprite(res, \"\".concat(spriteSheet.config.name, \"_\").concat(i, \"_\").concat(j));\n          this.addAsset(sprite);\n        });\n      }\n    }\n  }\n\n  addAsset(sprite) {\n    this.assets[sprite.name] = sprite.data;\n  }\n\n  deleteAsset(asset) {\n    delete this.assets[asset];\n  }\n\n  render() {// if (this.assets[\"bomber_0_0\"]) this.ctx.drawImage(this.assets.bomber_0_0, 64, 64);\n  }\n\n}\n\nexport default Animator;","map":{"version":3,"sources":["/home/aseemar/Desktop/JS_Projects/MERN_stack_project/frontend/src/bummerman/animator/animator.js"],"names":["Sprite","Animator","constructor","ctx","spriteSheet","assets","animations","generateSprites","i","config","rows","j","cols","createImageBitmap","img","frame","width","height","then","res","sprite","name","addAsset","data","deleteAsset","asset","render"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,QAAN,CAAe;AACXC,EAAAA,WAAW,CAAEC,GAAF,EAAOC,WAAP,EAAoB;AAC3B,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,UAAL,GAAkB,EAAlB;AAEA,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKI,eAAL,CAAqBH,WAArB;AACH;;AAEDG,EAAAA,eAAe,CAAEH,WAAF,EAAe;AAC1B,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,WAAW,CAACK,MAAZ,CAAmBC,IAAvC,EAA6CF,CAAC,EAA9C,EAAkD;AAC9C,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,WAAW,CAACK,MAAZ,CAAmBG,IAAvC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9C;AACAE,QAAAA,iBAAiB,CACbT,WAAW,CAACU,GADC,EACmB;AAChCN,QAAAA,CAAC,GAAGJ,WAAW,CAACW,KAAZ,CAAkBC,KAFT,EAEmB;AAChCL,QAAAA,CAAC,GAAGP,WAAW,CAACW,KAAZ,CAAkBE,MAHT,EAGmB;AAChCb,QAAAA,WAAW,CAACW,KAAZ,CAAkBC,KAJL,EAImB;AAChCZ,QAAAA,WAAW,CAACW,KAAZ,CAAkBE,MALL,CAKmB;AALnB,SAAjB,CAMEC,IANF,CAMOC,GAAG,IAAI;AACV,gBAAMC,MAAM,GAAG,IAAIpB,MAAJ,CAAWmB,GAAX,YAAmBf,WAAW,CAACK,MAAZ,CAAmBY,IAAtC,cAA8Cb,CAA9C,cAAmDG,CAAnD,EAAf;AACA,eAAKW,QAAL,CAAcF,MAAd;AACH,SATD;AAUH;AACJ;AAEJ;;AAEDE,EAAAA,QAAQ,CAAEF,MAAF,EAAU;AACd,SAAKf,MAAL,CAAYe,MAAM,CAACC,IAAnB,IAA2BD,MAAM,CAACG,IAAlC;AACH;;AAEDC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,WAAO,KAAKpB,MAAL,CAAYoB,KAAZ,CAAP;AACH;;AAEDC,EAAAA,MAAM,GAAI,CACN;AACH;;AAtCU;;AAyCf,eAAezB,QAAf","sourcesContent":["import Sprite from \"../player/sprite\";\n\nclass Animator {\n    constructor (ctx, spriteSheet) {\n        this.assets = {};\n        this.animations = {};\n\n        this.ctx = ctx;\n        this.generateSprites(spriteSheet); \n    }\n\n    generateSprites (spriteSheet) {\n        for (let i = 0; i < spriteSheet.config.rows; i++) {\n            for (let j = 0; j < spriteSheet.config.cols; j++) {\n                // debugger;\n                createImageBitmap(\n                    spriteSheet.img,                // img data\n                    i * spriteSheet.frame.width,    // sx: \n                    j * spriteSheet.frame.height,   // sy:\n                    spriteSheet.frame.width,        // sw:\n                    spriteSheet.frame.height        // sh:\n                ).then(res => {\n                    const sprite = new Sprite(res, `${spriteSheet.config.name}_${i}_${j}`);\n                    this.addAsset(sprite);\n                });\n            }\n        }\n        \n    }\n    \n    addAsset (sprite) {\n        this.assets[sprite.name] = sprite.data;\n    }\n\n    deleteAsset (asset) {\n        delete this.assets[asset];\n    }\n    \n    render () {\n        // if (this.assets[\"bomber_0_0\"]) this.ctx.drawImage(this.assets.bomber_0_0, 64, 64);\n    }\n}\n\nexport default Animator;"]},"metadata":{},"sourceType":"module"}