{"ast":null,"code":"export default class Input {\n  constructor(player) {\n    this.player = player;\n    this.handleInput = this.handleInput.bind(this);\n    document.addEventListener('keydown', this.handleInput.bind(this));\n    this.pressedKeys = {};\n  }\n\n  handleInput(e) {\n    e.preventDefault();\n    let key;\n\n    switch (e.keyCode) {\n      case 32:\n        key = 'SPACE';\n        break;\n\n      case 37:\n        key = 'LEFT';\n        break;\n\n      case 38:\n        key = 'UP';\n        break;\n\n      case 39:\n        key = 'RIGHT';\n        break;\n\n      case 40:\n        key = 'DOWN';\n        break;\n\n      default:\n        // Convert ASCII codes to letters\n        key = String.fromCharCode(code);\n        pressedKeys[key] = status;\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/aseemar/Desktop/JS_Projects/MERN_stack_project/frontend/src/bummerman/input.js"],"names":["Input","constructor","player","handleInput","bind","document","addEventListener","pressedKeys","e","preventDefault","key","keyCode","String","fromCharCode","code","status"],"mappings":"AAAA,eAAe,MAAMA,KAAN,CAAY;AACvBC,EAAAA,WAAW,CAAEC,MAAF,EAAU;AACjB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAKH,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAArC;AAEA,SAAKG,WAAL,GAAmB,EAAnB;AACH;;AAEDJ,EAAAA,WAAW,CAACK,CAAD,EAAI;AACXA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,GAAJ;;AACA,YAAQF,CAAC,CAACG,OAAV;AACI,WAAK,EAAL;AACID,QAAAA,GAAG,GAAG,OAAN;AACA;;AACJ,WAAK,EAAL;AACIA,QAAAA,GAAG,GAAG,MAAN;AAAc;;AAClB,WAAK,EAAL;AACIA,QAAAA,GAAG,GAAG,IAAN;AAAY;;AAChB,WAAK,EAAL;AACIA,QAAAA,GAAG,GAAG,OAAN;AAAe;;AACnB,WAAK,EAAL;AACIA,QAAAA,GAAG,GAAG,MAAN;AAAc;;AAClB;AACI;AACAA,QAAAA,GAAG,GAAGE,MAAM,CAACC,YAAP,CAAoBC,IAApB,CAAN;AAERP,QAAAA,WAAW,CAACG,GAAD,CAAX,GAAmBK,MAAnB;AAhBA;AAkBH;;AA9BsB","sourcesContent":["export default class Input {\n    constructor (player) {\n        this.player = player;\n        this.handleInput = this.handleInput.bind(this);\n        document.addEventListener('keydown', this.handleInput.bind(this));\n\n        this.pressedKeys = {};\n    }\n\n    handleInput(e) {\n        e.preventDefault();\n        let key;\n        switch (e.keyCode) {\n            case 32:\n                key = 'SPACE'; \n                break;\n            case 37:\n                key = 'LEFT'; break;\n            case 38:\n                key = 'UP'; break;\n            case 39:\n                key = 'RIGHT'; break;\n            case 40:\n                key = 'DOWN'; break;\n            default:\n                // Convert ASCII codes to letters\n                key = String.fromCharCode(code);\n\n        pressedKeys[key] = status;\n        }\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}