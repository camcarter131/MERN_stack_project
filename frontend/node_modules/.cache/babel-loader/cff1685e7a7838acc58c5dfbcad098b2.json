{"ast":null,"code":"class Animator {\n  constructor(ctx, spriteSheet) {\n    this.assets = {};\n    this.ctx = ctx;\n    spriteSheet.generateSprites(ctx).forEach(sprite => this.addAsset(sprite));\n    debugger;\n  }\n\n  generateSprites(spriteSheet) {\n    this.output = [];\n    const c = new OffscreenCanvas(this.img.width, this.img.height);\n    const cc = c.getContext('2d');\n    cc.drawImage(this.img, 0, 0, 96, 96, 0, 0, 96, 96);\n    let imgBM = createImageBitmap(this.img, {\n      premultiplyAlpha: 'premultiply'\n    }).then(() => {\n      output.push(imgBM);\n    });\n  }\n\n  addAsset(asset) {\n    this.assets[asset.data] = asset;\n  }\n\n  deleteAsset(asset) {\n    delete this.assets[asset];\n  }\n\n  render() {// Object.values(this.assets).forEach((sprite, idx) => this.ctx.putImageData(sprite, idx*48, 64));\n  }\n\n}\n\nexport default Animator;","map":{"version":3,"sources":["/home/aseemar/Desktop/JS_Projects/MERN_stack_project/frontend/src/bummerman/animator/animator.js"],"names":["Animator","constructor","ctx","spriteSheet","assets","generateSprites","forEach","sprite","addAsset","output","c","OffscreenCanvas","img","width","height","cc","getContext","drawImage","imgBM","createImageBitmap","premultiplyAlpha","then","push","asset","data","deleteAsset","render"],"mappings":"AAAA,MAAMA,QAAN,CAAe;AACXC,EAAAA,WAAW,CAAEC,GAAF,EAAOC,WAAP,EAAoB;AAC3B,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKF,GAAL,GAAWA,GAAX;AACAC,IAAAA,WAAW,CAACE,eAAZ,CAA4BH,GAA5B,EAAiCI,OAAjC,CAAyCC,MAAM,IAAI,KAAKC,QAAL,CAAcD,MAAd,CAAnD;AACA;AACH;;AAEDF,EAAAA,eAAe,CAAEF,WAAF,EAAe;AAC1B,SAAKM,MAAL,GAAc,EAAd;AACA,UAAMC,CAAC,GAAG,IAAIC,eAAJ,CAAoB,KAAKC,GAAL,CAASC,KAA7B,EAAoC,KAAKD,GAAL,CAASE,MAA7C,CAAV;AACA,UAAMC,EAAE,GAAGL,CAAC,CAACM,UAAF,CAAa,IAAb,CAAX;AACAD,IAAAA,EAAE,CAACE,SAAH,CAAa,KAAKL,GAAlB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,EAA3C,EAA+C,EAA/C;AACA,QAAIM,KAAK,GAAGC,iBAAiB,CAAC,KAAKP,GAAN,EAAW;AAAEQ,MAAAA,gBAAgB,EAAE;AAApB,KAAX,CAAjB,CAAiEC,IAAjE,CAAsE,MAAM;AACpFZ,MAAAA,MAAM,CAACa,IAAP,CAAYJ,KAAZ;AACH,KAFW,CAAZ;AAKH;;AAEDV,EAAAA,QAAQ,CAAEe,KAAF,EAAS;AACb,SAAKnB,MAAL,CAAYmB,KAAK,CAACC,IAAlB,IAA0BD,KAA1B;AACH;;AAEDE,EAAAA,WAAW,CAAEF,KAAF,EAAS;AAChB,WAAO,KAAKnB,MAAL,CAAYmB,KAAZ,CAAP;AACH;;AAEDG,EAAAA,MAAM,GAAI,CACN;AACH;;AA9BU;;AAiCf,eAAe1B,QAAf","sourcesContent":["class Animator {\n    constructor (ctx, spriteSheet) {\n        this.assets = {};\n        this.ctx = ctx;\n        spriteSheet.generateSprites(ctx).forEach(sprite => this.addAsset(sprite));\n        debugger;\n    }\n\n    generateSprites (spriteSheet) {\n        this.output = [];\n        const c = new OffscreenCanvas(this.img.width, this.img.height);\n        const cc = c.getContext('2d');\n        cc.drawImage(this.img, 0, 0, 96, 96, 0, 0, 96, 96);\n        let imgBM = createImageBitmap(this.img, { premultiplyAlpha: 'premultiply' }).then(() => {\n            output.push(imgBM);\n        });\n\n\n    }\n    \n    addAsset (asset) {\n        this.assets[asset.data] = asset;\n    }\n\n    deleteAsset (asset) {\n        delete this.assets[asset];\n    }\n    \n    render () {\n        // Object.values(this.assets).forEach((sprite, idx) => this.ctx.putImageData(sprite, idx*48, 64));\n    }\n}\n\nexport default Animator;"]},"metadata":{},"sourceType":"module"}