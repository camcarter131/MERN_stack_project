{"ast":null,"code":"const SPACE = \"SPACE\";\nconst LEFT = \"LEFT\";\nconst UP = \"UP\";\nconst RIGHT = \"RIGHT\";\nconst DOWN = \"DOWN\";\nexport default class Input {\n  constructor(player) {\n    this.player = player;\n    this.handleInput = this.handleInput.bind(this);\n    document.addEventListener('keydown', this.handleInput.bind(this, true));\n    document.addEventListener('keyup', this.handleInput.bind(this, false));\n    this.pressedKeys = {};\n  }\n\n  handleInput(e, status) {\n    e.preventDefault();\n    let key;\n\n    switch (e.keyCode) {\n      case 32:\n        key = SPACE;\n        break;\n\n      case 37:\n        key = LEFT;\n        break;\n\n      case 38:\n        key = UP;\n        break;\n\n      case 39:\n        key = RIGHT;\n        break;\n\n      case 40:\n        key = DOWN;\n        break;\n\n      default:\n        // Convert ASCII codes to letters\n        key = String.fromCharCode(e.keyCode);\n    }\n\n    this.pressedKeys[key] = status;\n  }\n\n  isDown(key) {\n    return this.pressedKeys[key];\n  }\n\n}","map":{"version":3,"sources":["/home/aseemar/Desktop/JS_Projects/MERN_stack_project/frontend/src/bummerman/input.js"],"names":["SPACE","LEFT","UP","RIGHT","DOWN","Input","constructor","player","handleInput","bind","document","addEventListener","pressedKeys","e","status","preventDefault","key","keyCode","String","fromCharCode","isDown"],"mappings":"AAAA,MAAMA,KAAK,GAAG,OAAd;AACA,MAAMC,IAAI,GAAG,MAAb;AACA,MAAMC,EAAE,GAAG,IAAX;AACA,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,IAAI,GAAG,MAAb;AAEA,eAAe,MAAMC,KAAN,CAAY;AACvBC,EAAAA,WAAW,CAAEC,MAAF,EAAU;AACjB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAKH,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,EAA4B,IAA5B,CAArC;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKH,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,EAA4B,KAA5B,CAAnC;AAEA,SAAKG,WAAL,GAAmB,EAAnB;AACH;;AAEDJ,EAAAA,WAAW,CAACK,CAAD,EAAIC,MAAJ,EAAY;AACnBD,IAAAA,CAAC,CAACE,cAAF;AACA,QAAIC,GAAJ;;AACA,YAAQH,CAAC,CAACI,OAAV;AACI,WAAK,EAAL;AACID,QAAAA,GAAG,GAAGhB,KAAN;AACA;;AACJ,WAAK,EAAL;AACIgB,QAAAA,GAAG,GAAGf,IAAN;AACA;;AACJ,WAAK,EAAL;AACIe,QAAAA,GAAG,GAAGd,EAAN;AACA;;AACJ,WAAK,EAAL;AACIc,QAAAA,GAAG,GAAGb,KAAN;AACA;;AACJ,WAAK,EAAL;AACIa,QAAAA,GAAG,GAAGZ,IAAN;AACA;;AACJ;AACI;AACAY,QAAAA,GAAG,GAAGE,MAAM,CAACC,YAAP,CAAoBN,CAAC,CAACI,OAAtB,CAAN;AAlBR;;AAsBA,SAAKL,WAAL,CAAiBI,GAAjB,IAAwBF,MAAxB;AACH;;AAEDM,EAAAA,MAAM,CAAEJ,GAAF,EAAO;AACT,WAAO,KAAKJ,WAAL,CAAiBI,GAAjB,CAAP;AACH;;AAxCsB","sourcesContent":["const SPACE = \"SPACE\";\nconst LEFT = \"LEFT\";\nconst UP = \"UP\";\nconst RIGHT = \"RIGHT\";\nconst DOWN = \"DOWN\";\n\nexport default class Input {\n    constructor (player) {\n        this.player = player;\n        this.handleInput = this.handleInput.bind(this);\n        document.addEventListener('keydown', this.handleInput.bind(this, true));\n        document.addEventListener('keyup', this.handleInput.bind(this, false));\n\n        this.pressedKeys = {};\n    }\n\n    handleInput(e, status) {\n        e.preventDefault();\n        let key;\n        switch (e.keyCode) {\n            case 32:\n                key = SPACE; \n                break;\n            case 37:\n                key = LEFT; \n                break;\n            case 38:\n                key = UP; \n                break;\n            case 39:\n                key = RIGHT; \n                break;\n            case 40:\n                key = DOWN; \n                break;\n            default:\n                // Convert ASCII codes to letters\n                key = String.fromCharCode(e.keyCode);\n\n        }\n\n        this.pressedKeys[key] = status;\n    }\n\n    isDown (key) {\n        return this.pressedKeys[key];\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}