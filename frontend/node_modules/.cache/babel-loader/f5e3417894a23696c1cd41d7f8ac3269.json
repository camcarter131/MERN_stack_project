{"ast":null,"code":"import Grid from \"./grid\";\nimport Player from \"./player\";\n\nclass Game {\n  constructor(canvas, ctx) {\n    this.grid = new Grid(canvas, ctx);\n    this.player = new Player(canvas, ctx);\n    this.initialTime = Date.now(); // this.grid.drawGrid();\n    // this.grid.populateGrid();\n\n    this.start();\n  }\n\n  start() {\n    if (this === undefined) debugger;\n    let time = Date.now();\n    let dt = (time - this.initialTime) / 1000.0;\n    this.update(dt);\n    this.render();\n    this.initialTime = time;\n    requestAnimationFrame(this.start.bind(this));\n  }\n\n  update(dt) {\n    // debugger;\n    // console.log('hello');\n    this.player.update(dt);\n  }\n\n  render() {\n    this.player.render();\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/aseemar/Desktop/JS_Projects/MERN_stack_project/frontend/src/bummerman/game.js"],"names":["Grid","Player","Game","constructor","canvas","ctx","grid","player","initialTime","Date","now","start","undefined","time","dt","update","render","requestAnimationFrame","bind"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,IAAN,CAAW;AACPC,EAAAA,WAAW,CAAEC,MAAF,EAAUC,GAAV,EAAe;AACtB,SAAKC,IAAL,GAAY,IAAIN,IAAJ,CAASI,MAAT,EAAiBC,GAAjB,CAAZ;AACA,SAAKE,MAAL,GAAc,IAAIN,MAAJ,CAAWG,MAAX,EAAmBC,GAAnB,CAAd;AAEA,SAAKG,WAAL,GAAmBC,IAAI,CAACC,GAAL,EAAnB,CAJsB,CAMtB;AACA;;AAEA,SAAKC,KAAL;AACH;;AAIDA,EAAAA,KAAK,GAAI;AACL,QAAI,SAASC,SAAb,EAAwB;AACxB,QAAIC,IAAI,GAAGJ,IAAI,CAACC,GAAL,EAAX;AACA,QAAII,EAAE,GAAG,CAACD,IAAI,GAAG,KAAKL,WAAb,IAA4B,MAArC;AAEA,SAAKO,MAAL,CAAYD,EAAZ;AACA,SAAKE,MAAL;AAEA,SAAKR,WAAL,GAAmBK,IAAnB;AACAI,IAAAA,qBAAqB,CAAC,KAAKN,KAAL,CAAWO,IAAX,CAAgB,IAAhB,CAAD,CAArB;AACH;;AAEDH,EAAAA,MAAM,CAAED,EAAF,EAAM;AACR;AACA;AACA,SAAKP,MAAL,CAAYQ,MAAZ,CAAmBD,EAAnB;AACH;;AAEDE,EAAAA,MAAM,GAAI;AACN,SAAKT,MAAL,CAAYS,MAAZ;AACH;;AAnCM;;AAuCX,eAAed,IAAf","sourcesContent":["import Grid from \"./grid\";\nimport Player from \"./player\";\n\nclass Game {\n    constructor (canvas, ctx) {\n        this.grid = new Grid(canvas, ctx);\n        this.player = new Player(canvas, ctx);\n\n        this.initialTime = Date.now();\n        \n        // this.grid.drawGrid();\n        // this.grid.populateGrid();\n        \n        this.start();\n    }\n\n    \n\n    start () {\n        if (this === undefined) debugger;\n        let time = Date.now();\n        let dt = (time - this.initialTime) / 1000.0;    \n\n        this.update(dt);\n        this.render();\n\n        this.initialTime = time;\n        requestAnimationFrame(this.start.bind(this));\n    }\n\n    update (dt) {\n        // debugger;\n        // console.log('hello');\n        this.player.update(dt);\n    }\n\n    render () {\n        this.player.render();\n    }\n\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}