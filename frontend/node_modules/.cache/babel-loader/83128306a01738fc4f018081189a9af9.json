{"ast":null,"code":"import Grid from \"./grid\";\nimport Player from \"./player\";\n\nclass Game {\n  constructor(canvas, ctx) {\n    this.grid = new Grid(canvas, ctx);\n    this.player = new Player(canvas, ctx);\n    this.previousTime = 0;\n    this.grid.drawGrid();\n    this.grid.populateGrid();\n    this.player.render();\n  }\n\n  start() {\n    let time = Date.now();\n    let dt = (time - this.previousTime) / 1000.0;\n    this.update(dt);\n    this.render();\n    this.previousTime = time;\n    requestAnimationFrame(this.start);\n  }\n\n  update(dt) {\n    debugger;\n    this.player.update(dt);\n  }\n\n  render() {}\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/aseemar/Desktop/JS_Projects/MERN_stack_project/frontend/src/bummerman/game.js"],"names":["Grid","Player","Game","constructor","canvas","ctx","grid","player","previousTime","drawGrid","populateGrid","render","start","time","Date","now","dt","update","requestAnimationFrame"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,IAAN,CAAW;AACPC,EAAAA,WAAW,CAAEC,MAAF,EAAUC,GAAV,EAAe;AACtB,SAAKC,IAAL,GAAY,IAAIN,IAAJ,CAASI,MAAT,EAAiBC,GAAjB,CAAZ;AACA,SAAKE,MAAL,GAAc,IAAIN,MAAJ,CAAWG,MAAX,EAAmBC,GAAnB,CAAd;AAEA,SAAKG,YAAL,GAAoB,CAApB;AAEA,SAAKF,IAAL,CAAUG,QAAV;AACA,SAAKH,IAAL,CAAUI,YAAV;AAEA,SAAKH,MAAL,CAAYI,MAAZ;AACH;;AAIDC,EAAAA,KAAK,GAAI;AACL,QAAIC,IAAI,GAAGC,IAAI,CAACC,GAAL,EAAX;AACA,QAAIC,EAAE,GAAG,CAACH,IAAI,GAAG,KAAKL,YAAb,IAA6B,MAAtC;AAEA,SAAKS,MAAL,CAAYD,EAAZ;AACA,SAAKL,MAAL;AAEA,SAAKH,YAAL,GAAoBK,IAApB;AACAK,IAAAA,qBAAqB,CAAC,KAAKN,KAAN,CAArB;AACH;;AAEDK,EAAAA,MAAM,CAAED,EAAF,EAAM;AACR;AACA,SAAKT,MAAL,CAAYU,MAAZ,CAAmBD,EAAnB;AACH;;AAEDL,EAAAA,MAAM,GAAI,CAET;;AAjCM;;AAqCX,eAAeT,IAAf","sourcesContent":["import Grid from \"./grid\";\nimport Player from \"./player\";\n\nclass Game {\n    constructor (canvas, ctx) {\n        this.grid = new Grid(canvas, ctx);\n        this.player = new Player(canvas, ctx);\n\n        this.previousTime = 0;\n\n        this.grid.drawGrid();\n        this.grid.populateGrid();\n        \n        this.player.render();\n    }\n\n    \n\n    start () {\n        let time = Date.now();\n        let dt = (time - this.previousTime) / 1000.0;    \n\n        this.update(dt);\n        this.render();\n\n        this.previousTime = time;\n        requestAnimationFrame(this.start);\n    }\n\n    update (dt) {\n        debugger;\n        this.player.update(dt);\n    }\n\n    render () {\n\n    }\n\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}