{"ast":null,"code":"import Sprite from \"../player/sprite\";\n\nclass SpriteSheet {\n  constructor(img, config) {\n    this.img = img;\n    this.config = config || {\n      rows: 0,\n      cols: 0\n    };\n    this.frame = {\n      width: Math.floor(this.img.width / (this.config.cols || 1)),\n      height: Math.floor(this.img.height / (this.config.rows || 1))\n    }; // debugger;\n  }\n\n  generateSprites() {\n    // debugger;\n    // this.tmpCanvas = new OffscreenCanvas(this.img.width, this.img.height);\n    // this.tmpcc = this.tmpCanvas.getContext('2d');\n    // this.tmpcc.drawImage(this.img, 0, 0);\n    const output = [];\n    const c = document.createElement('canvas');\n    c.width = this.img.width;\n    c.height = this.img.height;\n    const cc = c.getContext('2d');\n    cc.drawImage(this.img, 0, 0);\n\n    for (let i = 0; i < this.img.width / 32; i++) {\n      for (let j = 0; j < this.img.height; i++) {\n        let imgData = cc.getImageData(i * this.frame.width, j * this.frame.height, this.frame.width, this.frame.height);\n        output.push(new Sprite(imgData, \"bomber_\".concat(i, \"_\").concat(j)));\n        debugger;\n      }\n    }\n\n    debugger;\n    return output;\n  }\n\n}\n\nexport default SpriteSheet;","map":{"version":3,"sources":["/home/aseemar/Desktop/JS_Projects/MERN_stack_project/frontend/src/bummerman/animator/spritesheet.js"],"names":["Sprite","SpriteSheet","constructor","img","config","rows","cols","frame","width","Math","floor","height","generateSprites","output","c","document","createElement","cc","getContext","drawImage","i","j","imgData","getImageData","push"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,WAAW,CAAEC,GAAF,EAAOC,MAAP,EAAe;AACtB,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKC,MAAL,GAAcA,MAAM,IAAI;AACpBC,MAAAA,IAAI,EAAE,CADc;AAEpBC,MAAAA,IAAI,EAAE;AAFc,KAAxB;AAIA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAW,KAAKP,GAAL,CAASK,KAAT,IAAkB,KAAKJ,MAAL,CAAYE,IAAZ,IAAoB,CAAtC,CAAX,CADE;AAETK,MAAAA,MAAM,EAAEF,IAAI,CAACC,KAAL,CAAW,KAAKP,GAAL,CAASQ,MAAT,IAAmB,KAAKP,MAAL,CAAYC,IAAZ,IAAoB,CAAvC,CAAX;AAFC,KAAb,CANsB,CAUtB;AACH;;AAEDO,EAAAA,eAAe,GAAI;AACf;AACA;AACA;AAEA;AAEA,UAAMC,MAAM,GAAG,EAAf;AAEA,UAAMC,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAV;AACAF,IAAAA,CAAC,CAACN,KAAF,GAAU,KAAKL,GAAL,CAASK,KAAnB;AACAM,IAAAA,CAAC,CAACH,MAAF,GAAW,KAAKR,GAAL,CAASQ,MAApB;AACA,UAAMM,EAAE,GAAGH,CAAC,CAACI,UAAF,CAAa,IAAb,CAAX;AACAD,IAAAA,EAAE,CAACE,SAAH,CAAa,KAAKhB,GAAlB,EAAuB,CAAvB,EAA0B,CAA1B;;AAEA,SAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKjB,GAAL,CAASK,KAAT,GAAiB,EAArC,EAAyCY,CAAC,EAA1C,EAA8C;AAC1C,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKlB,GAAL,CAASQ,MAA7B,EAAqCS,CAAC,EAAtC,EAA0C;AACtC,YAAIE,OAAO,GAAGL,EAAE,CAACM,YAAH,CAAgBH,CAAC,GAAG,KAAKb,KAAL,CAAWC,KAA/B,EACVa,CAAC,GAAG,KAAKd,KAAL,CAAWI,MADL,EAEV,KAAKJ,KAAL,CAAWC,KAFD,EAGV,KAAKD,KAAL,CAAWI,MAHD,CAAd;AAKAE,QAAAA,MAAM,CAACW,IAAP,CAAY,IAAIxB,MAAJ,CAAWsB,OAAX,mBAA8BF,CAA9B,cAAmCC,CAAnC,EAAZ;AACA;AACH;AACJ;;AACD;AAEA,WAAOR,MAAP;AACH;;AA3Ca;;AA8ClB,eAAeZ,WAAf","sourcesContent":["import Sprite from \"../player/sprite\";\n\nclass SpriteSheet {\n    constructor (img, config) {\n        this.img = img;\n        this.config = config || {\n            rows: 0,\n            cols: 0\n        };\n        this.frame = {\n            width: Math.floor(this.img.width / (this.config.cols || 1)),\n            height: Math.floor(this.img.height / (this.config.rows || 1))\n        };\n        // debugger;\n    }\n\n    generateSprites () {\n        // debugger;\n        // this.tmpCanvas = new OffscreenCanvas(this.img.width, this.img.height);\n        // this.tmpcc = this.tmpCanvas.getContext('2d');\n\n        // this.tmpcc.drawImage(this.img, 0, 0);\n\n        const output = [];\n\n        const c = document.createElement('canvas');\n        c.width = this.img.width;\n        c.height = this.img.height;\n        const cc = c.getContext('2d');\n        cc.drawImage(this.img, 0, 0);\n\n        for (let i = 0; i < this.img.width / 32; i++) {\n            for (let j = 0; j < this.img.height; i++) {\n                let imgData = cc.getImageData(i * this.frame.width,\n                    j * this.frame.height,\n                    this.frame.width,\n                    this.frame.height\n                );\n                output.push(new Sprite(imgData, `bomber_${i}_${j}`));\n                debugger;\n            }\n        }\n        debugger;\n\n        return output;\n    }\n}\n\nexport default SpriteSheet;"]},"metadata":{},"sourceType":"module"}