{"ast":null,"code":"import { SPACE, LEFT, UP, RIGHT, DOWN } from \"./keys\";\nexport default class Input {\n  constructor(player) {\n    this.player = player;\n    document.addEventListener('keydown', e => this.setKey(e, true));\n    document.addEventListener('keyup', e => this.setKey(e, true));\n    this.pressedKeys = {};\n  }\n\n  setKey(e, status) {\n    e.preventDefault();\n    let key;\n\n    switch (e.keyCode) {\n      case 32:\n        key = SPACE;\n        break;\n\n      case 37:\n        key = LEFT;\n        this.player.velocity.x = -this.player.speed;\n        break;\n\n      case 38:\n        key = UP;\n        this.player.velocity.y = -this.player.speed;\n        break;\n\n      case 39:\n        key = RIGHT;\n        this.player.velocity.x = this.player.speed;\n        break;\n\n      case 40:\n        key = DOWN;\n        this.player.velocity.y = this.player.speed;\n        break;\n\n      default:\n        // Convert ASCII codes to letters\n        key = String.fromCharCode(e.keyCode);\n    }\n\n    this.pressedKeys[key] = status;\n  }\n\n  isPressed(key) {\n    return this.pressedKeys[key];\n  }\n\n}","map":{"version":3,"sources":["/home/aseemar/Desktop/JS_Projects/MERN_stack_project/frontend/src/bummerman/input.js"],"names":["SPACE","LEFT","UP","RIGHT","DOWN","Input","constructor","player","document","addEventListener","e","setKey","pressedKeys","status","preventDefault","key","keyCode","velocity","x","speed","y","String","fromCharCode","isPressed"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,EAAtB,EAA0BC,KAA1B,EAAiCC,IAAjC,QAA6C,QAA7C;AAEA,eAAe,MAAMC,KAAN,CAAY;AACvBC,EAAAA,WAAW,CAAEC,MAAF,EAAU;AACjB,SAAKA,MAAL,GAAcA,MAAd;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAsCC,CAAD,IAAO,KAAKC,MAAL,CAAYD,CAAZ,EAAe,IAAf,CAA5C;AACAF,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAoCC,CAAD,IAAO,KAAKC,MAAL,CAAYD,CAAZ,EAAe,IAAf,CAA1C;AAEA,SAAKE,WAAL,GAAmB,EAAnB;AACH;;AAEDD,EAAAA,MAAM,CAACD,CAAD,EAAIG,MAAJ,EAAY;AACdH,IAAAA,CAAC,CAACI,cAAF;AACA,QAAIC,GAAJ;;AACA,YAAQL,CAAC,CAACM,OAAV;AACI,WAAK,EAAL;AACID,QAAAA,GAAG,GAAGf,KAAN;AACA;;AACJ,WAAK,EAAL;AACIe,QAAAA,GAAG,GAAGd,IAAN;AACA,aAAKM,MAAL,CAAYU,QAAZ,CAAqBC,CAArB,GAAyB,CAAC,KAAKX,MAAL,CAAYY,KAAtC;AACA;;AACA,WAAK,EAAL;AACAJ,QAAAA,GAAG,GAAGb,EAAN;AACA,aAAKK,MAAL,CAAYU,QAAZ,CAAqBG,CAArB,GAAyB,CAAC,KAAKb,MAAL,CAAYY,KAAtC;AACA;;AACA,WAAK,EAAL;AACAJ,QAAAA,GAAG,GAAGZ,KAAN;AACA,aAAKI,MAAL,CAAYU,QAAZ,CAAqBC,CAArB,GAAyB,KAAKX,MAAL,CAAYY,KAArC;AACA;;AACA,WAAK,EAAL;AACAJ,QAAAA,GAAG,GAAGX,IAAN;AACA,aAAKG,MAAL,CAAYU,QAAZ,CAAqBG,CAArB,GAAyB,KAAKb,MAAL,CAAYY,KAArC;AACA;;AACJ;AACI;AACAJ,QAAAA,GAAG,GAAGM,MAAM,CAACC,YAAP,CAAoBZ,CAAC,CAACM,OAAtB,CAAN;AAtBR;;AA0BA,SAAKJ,WAAL,CAAiBG,GAAjB,IAAwBF,MAAxB;AACH;;AAEDU,EAAAA,SAAS,CAAER,GAAF,EAAO;AACZ,WAAO,KAAKH,WAAL,CAAiBG,GAAjB,CAAP;AACH;;AA3CsB","sourcesContent":["import { SPACE, LEFT, UP, RIGHT, DOWN } from \"./keys\";\n\nexport default class Input {\n    constructor (player) {\n        this.player = player;\n        document.addEventListener('keydown', (e) => this.setKey(e, true));\n        document.addEventListener('keyup', (e) => this.setKey(e, true));\n\n        this.pressedKeys = {};\n    }\n\n    setKey(e, status) {\n        e.preventDefault();\n        let key;\n        switch (e.keyCode) {\n            case 32:\n                key = SPACE; \n                break;\n            case 37:\n                key = LEFT; \n                this.player.velocity.x = -this.player.speed;\n                break;\n                case 38:\n                key = UP; \n                this.player.velocity.y = -this.player.speed;\n                break;\n                case 39:\n                key = RIGHT; \n                this.player.velocity.x = this.player.speed;\n                break;\n                case 40:\n                key = DOWN; \n                this.player.velocity.y = this.player.speed;\n                break;\n            default:\n                // Convert ASCII codes to letters\n                key = String.fromCharCode(e.keyCode);\n\n        }\n\n        this.pressedKeys[key] = status;\n    }\n\n    isPressed (key) {\n        return this.pressedKeys[key];\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}