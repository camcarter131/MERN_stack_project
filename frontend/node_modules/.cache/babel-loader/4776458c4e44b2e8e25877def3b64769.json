{"ast":null,"code":"class Animation {\n  constructor(ctx, sprite, config) {\n    this.ctx = ctx;\n    this.sprite = sprite;\n    this.frames = config.frames;\n    this.frameWidth = Math.floor(this.sprite.img.width / this.frames.length);\n    this._index = 0;\n    this.frameCountBuffer = config.frameCountBuffer || 20;\n    this.frameCount = 0;\n    this.config = config || {\n      loop: true,\n      src: {\n        x: 0,\n        y: 0\n      }\n    };\n    window.spritevel = this.sprite.velocity;\n  }\n\n  update(dt) {\n    this.frameCount++;\n    if (this.frameCount < this.frameCountBuffer) return;else {\n      this._index = ++this._index % this.frames.length;\n      this.frameCount = 0;\n    }\n  }\n\n  render(axis, dir) {\n    if (dir > 0) {\n      this.sprite.velocity[axis] > 0 ? this.ctx.drawImage(this.sprite.img, this.frames[this._index] * this.sprite.size.width, 0, this.sprite.size.width, this.sprite.size.height, 0, 0, 48, 48) : this.ctx.drawImage(this.sprite.img, 0 * this.sprite.size.width, 0, this.sprite.size.width, this.sprite.size.height, 0, 0, 48, 48);\n    } else {\n      this._index = this.sprite.velocity[axis] < 0 ? this.ctx.drawImage(this.sprite.img, this.frames[this._index] * this.sprite.size.width, 0, this.sprite.size.width, this.sprite.size.height, 0, 0, 48, 48) : this.ctx.drawImage(this.sprite.img, 0 * this.sprite.size.width, 0, this.sprite.size.width, this.sprite.size.height, 0, 0, 48, 48);\n    }\n  }\n\n}\n\nexport default Animation;","map":{"version":3,"sources":["/home/aseemar/Desktop/JS_Projects/MERN_stack_project/frontend/src/bummerman/animator/animation.js"],"names":["Animation","constructor","ctx","sprite","config","frames","frameWidth","Math","floor","img","width","length","_index","frameCountBuffer","frameCount","loop","src","x","y","window","spritevel","velocity","update","dt","render","axis","dir","drawImage","size","height"],"mappings":"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","sourcesContent":["class Animation {\n    constructor(ctx, sprite, config) {\n        this.ctx = ctx;\n        this.sprite = sprite;\n        this.frames = config.frames;\n        this.frameWidth = Math.floor(this.sprite.img.width / this.frames.length);\n        this._index = 0;\n\n        this.frameCountBuffer = config.frameCountBuffer || 20;\n        this.frameCount = 0;\n\n        this.config = config || {\n            loop: true,\n            src: {\n                x: 0,\n                y: 0\n            }\n        }\n        window.spritevel = this.sprite.velocity;\n    }\n\n    update(dt) {\n        this.frameCount++;\n        if (this.frameCount < this.frameCountBuffer) return;\n        else {\n            this._index = ++this._index % this.frames.length;\n            this.frameCount = 0;\n        }\n    }\n\n    render(axis, dir) {\n        if (dir > 0) {\n            (this.sprite.velocity[axis] > 0) ?\n                this.ctx.drawImage(this.sprite.img, this.frames[this._index] * this.sprite.size.width, 0, this.sprite.size.width, this.sprite.size.height, 0, 0, 48, 48) :\n                this.ctx.drawImage(this.sprite.img, 0 * this.sprite.size.width, 0, this.sprite.size.width, this.sprite.size.height, 0, 0, 48, 48);\n        } else {\n            this._index = (this.sprite.velocity[axis] < 0) ? this.ctx.drawImage(this.sprite.img, this.frames[this._index] * this.sprite.size.width, 0, this.sprite.size.width, this.sprite.size.height, 0, 0, 48, 48) :\n                this.ctx.drawImage(this.sprite.img, 0 * this.sprite.size.width, 0, this.sprite.size.width, this.sprite.size.height, 0, 0, 48, 48);\n        }\n    }\n}\n\nexport default Animation;"]},"metadata":{},"sourceType":"module"}