{"ast":null,"code":"class Animation {\n  constructor(ctx, sprite, config) {\n    this.ctx = ctx;\n    this.sprite = sprite;\n    this.frames = config.frames || 1;\n    this.frameWidth = Math.floor(this.sprite.img.width / this.frames);\n    this._index = 0;\n    this.config = config || {\n      loop: true\n    };\n  }\n\n  update(dt) {\n    this._index = ++this._index % this.frames;\n  }\n\n  render(axis, dir) {\n    // let frame;\n    // if (this.sprite.speed > 0) {\n    //     const maxFrameCount = this.frames.length;\n    //     const nextFrameIdx = Math.floor(this._index);\n    //     frame = this.frames[nextFrameIdx % maxFrameCount];\n    //     if (!this.config.loop && nextFrameIdx > maxFrameCount) return;\n    //     else frame = 0;\n    // }\n    if (dir > 0) {\n      this._index = this.sprite.velocity[axis] > 0 ? this._index : 0;\n    } //else {\n    //     this._index = (this.sprite.velocity[axis] < 0) ? this._index : 0;\n    // }\n\n\n    this.ctx.drawImage(this.sprite.img, this._index * this.sprite.size.width, 0, this.sprite.size.width, this.sprite.size.height, 0, 0, 48, 48);\n  }\n\n}\n\nexport default Animation;","map":{"version":3,"sources":["/home/aseemar/Desktop/JS_Projects/MERN_stack_project/frontend/src/bummerman/animator/animation.js"],"names":["Animation","constructor","ctx","sprite","config","frames","frameWidth","Math","floor","img","width","_index","loop","update","dt","render","axis","dir","velocity","drawImage","size","height"],"mappings":"AAAA,MAAMA,SAAN,CAAgB;AACZC,EAAAA,WAAW,CAAEC,GAAF,EAAOC,MAAP,EAAeC,MAAf,EAAuB;AAC9B,SAAKF,GAAL,GAAWA,GAAX;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKE,MAAL,GAAcD,MAAM,CAACC,MAAP,IAAiB,CAA/B;AACA,SAAKC,UAAL,GAAkBC,IAAI,CAACC,KAAL,CAAW,KAAKL,MAAL,CAAYM,GAAZ,CAAgBC,KAAhB,GAAwB,KAAKL,MAAxC,CAAlB;AACA,SAAKM,MAAL,GAAc,CAAd;AAEA,SAAKP,MAAL,GAAcA,MAAM,IAAI;AACpBQ,MAAAA,IAAI,EAAE;AADc,KAAxB;AAGH;;AAEDC,EAAAA,MAAM,CAAEC,EAAF,EAAM;AACR,SAAKH,MAAL,GAAc,EAAE,KAAKA,MAAP,GAAgB,KAAKN,MAAnC;AACH;;AAEDU,EAAAA,MAAM,CAAEC,IAAF,EAAQC,GAAR,EAAa;AACf;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,QAAIA,GAAG,GAAG,CAAV,EAAa;AACT,WAAKN,MAAL,GAAe,KAAKR,MAAL,CAAYe,QAAZ,CAAqBF,IAArB,IAA6B,CAA9B,GAAmC,KAAKL,MAAxC,GAAiD,CAA/D;AACH,KAZc,CAYb;AACF;AACA;;;AACA,SAAKT,GAAL,CAASiB,SAAT,CAAmB,KAAKhB,MAAL,CAAYM,GAA/B,EAAoC,KAAKE,MAAL,GAAc,KAAKR,MAAL,CAAYiB,IAAZ,CAAiBV,KAAnE,EAA0E,CAA1E,EAA6E,KAAKP,MAAL,CAAYiB,IAAZ,CAAiBV,KAA9F,EAAqG,KAAKP,MAAL,CAAYiB,IAAZ,CAAiBC,MAAtH,EAA8H,CAA9H,EAAiI,CAAjI,EAAoI,EAApI,EAAwI,EAAxI;AACH;;AAjCW;;AAoChB,eAAerB,SAAf","sourcesContent":["class Animation {\n    constructor (ctx, sprite, config) {\n        this.ctx = ctx;\n        this.sprite = sprite;\n        this.frames = config.frames || 1;\n        this.frameWidth = Math.floor(this.sprite.img.width / this.frames);\n        this._index = 0;\n\n        this.config = config || {\n            loop: true\n        }\n    }\n\n    update (dt) {\n        this._index = ++this._index % this.frames;\n    }\n\n    render (axis, dir) {\n        // let frame;\n        // if (this.sprite.speed > 0) {\n        //     const maxFrameCount = this.frames.length;\n        //     const nextFrameIdx = Math.floor(this._index);\n        //     frame = this.frames[nextFrameIdx % maxFrameCount];\n\n        //     if (!this.config.loop && nextFrameIdx > maxFrameCount) return;\n        //     else frame = 0;\n        // }\n        if (dir > 0) {\n            this._index = (this.sprite.velocity[axis] > 0) ? this._index : 0;\n        } //else {\n        //     this._index = (this.sprite.velocity[axis] < 0) ? this._index : 0;\n        // }\n        this.ctx.drawImage(this.sprite.img, this._index * this.sprite.size.width, 0, this.sprite.size.width, this.sprite.size.height, 0, 0, 48, 48);\n    }\n}\n\nexport default Animation;"]},"metadata":{},"sourceType":"module"}