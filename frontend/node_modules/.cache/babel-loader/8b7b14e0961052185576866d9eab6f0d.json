{"ast":null,"code":"const keys = require(\"./keys\");\n\nconst Bomb = require('./bombs/bomb');\n\nclass Input {\n  constructor(player) {\n    this.player = player;\n    this.pressedKeys = {};\n    document.addEventListener('keydown', e => this.setKey(e, true));\n    document.addEventListener('keyup', e => this.setKey(e, false));\n    window.addEventListener('blur', () => this.pressedKeys = {});\n  }\n\n  setKey(e, status) {\n    e.preventDefault();\n    let key;\n\n    switch (e.keyCode) {\n      case 32:\n        key = keys.SPACE;\n        break;\n\n      case 37:\n        key = keys.LEFT;\n        break;\n\n      case 38:\n        key = keys.UP;\n        break;\n\n      case 39:\n        key = keys.RIGHT;\n        break;\n\n      case 40:\n        key = keys.DOWN;\n        break;\n\n      default:\n        // Convert ASCII codes to letters\n        key = String.fromCharCode(e.keyCode);\n    }\n\n    this.pressedKeys[key] = status;\n  }\n\n  isPressed(key) {\n    return this.pressedKeys[key];\n  }\n\n}\n\nmodule.exports = Input;","map":{"version":3,"sources":["/Users/cameroncarter/Desktop/aA-flex/frontend/src/bummerman/input.js"],"names":["keys","require","Bomb","Input","constructor","player","pressedKeys","document","addEventListener","e","setKey","window","status","preventDefault","key","keyCode","SPACE","LEFT","UP","RIGHT","DOWN","String","fromCharCode","isPressed","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,IAAI,GAAED,OAAO,CAAC,cAAD,CAAnB;;AAEA,MAAME,KAAN,CAAY;AACRC,EAAAA,WAAW,CAAEC,MAAF,EAAU;AACjB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,WAAL,GAAmB,EAAnB;AAEAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAsCC,CAAD,IAAO,KAAKC,MAAL,CAAYD,CAAZ,EAAe,IAAf,CAA5C;AACAF,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAoCC,CAAD,IAAO,KAAKC,MAAL,CAAYD,CAAZ,EAAe,KAAf,CAA1C;AACAE,IAAAA,MAAM,CAACH,gBAAP,CAAwB,MAAxB,EAAgC,MAAM,KAAKF,WAAL,GAAmB,EAAzD;AACH;;AAEDI,EAAAA,MAAM,CAACD,CAAD,EAAIG,MAAJ,EAAY;AACdH,IAAAA,CAAC,CAACI,cAAF;AACA,QAAIC,GAAJ;;AACA,YAAQL,CAAC,CAACM,OAAV;AACI,WAAK,EAAL;AACID,QAAAA,GAAG,GAAGd,IAAI,CAACgB,KAAX;AACA;;AACJ,WAAK,EAAL;AACIF,QAAAA,GAAG,GAAGd,IAAI,CAACiB,IAAX;AACA;;AACJ,WAAK,EAAL;AACIH,QAAAA,GAAG,GAAGd,IAAI,CAACkB,EAAX;AACA;;AACJ,WAAK,EAAL;AACIJ,QAAAA,GAAG,GAAGd,IAAI,CAACmB,KAAX;AACA;;AACJ,WAAK,EAAL;AACIL,QAAAA,GAAG,GAAGd,IAAI,CAACoB,IAAX;AACA;;AACJ;AACI;AACAN,QAAAA,GAAG,GAAGO,MAAM,CAACC,YAAP,CAAoBb,CAAC,CAACM,OAAtB,CAAN;AAlBR;;AAsBA,SAAKT,WAAL,CAAiBQ,GAAjB,IAAwBF,MAAxB;AACH;;AAEDW,EAAAA,SAAS,CAAET,GAAF,EAAO;AACZ,WAAO,KAAKR,WAAL,CAAiBQ,GAAjB,CAAP;AACH;;AAxCO;;AA4CZU,MAAM,CAACC,OAAP,GAAiBtB,KAAjB","sourcesContent":["const keys = require(\"./keys\");\nconst Bomb =require('./bombs/bomb');\n\nclass Input {\n    constructor (player) {\n        this.player = player;\n        this.pressedKeys = {};\n\n        document.addEventListener('keydown', (e) => this.setKey(e, true));\n        document.addEventListener('keyup', (e) => this.setKey(e, false));\n        window.addEventListener('blur', () => this.pressedKeys = {})        \n    }\n\n    setKey(e, status) {\n        e.preventDefault();\n        let key;\n        switch (e.keyCode) {\n            case 32:\n                key = keys.SPACE;\n                break;\n            case 37:\n                key = keys.LEFT; \n                break;\n            case 38:\n                key = keys.UP; \n                break;\n            case 39:\n                key = keys.RIGHT; \n                break;\n            case 40:\n                key = keys.DOWN; \n                break;\n            default:\n                // Convert ASCII codes to letters\n                key = String.fromCharCode(e.keyCode);\n\n        }\n\n        this.pressedKeys[key] = status;\n    }\n\n    isPressed (key) {\n        return this.pressedKeys[key];\n    }\n    \n}\n\nmodule.exports = Input;"]},"metadata":{},"sourceType":"module"}