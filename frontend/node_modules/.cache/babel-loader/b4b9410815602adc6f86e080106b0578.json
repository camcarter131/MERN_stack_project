{"ast":null,"code":"class ResourceManager {\n  constructor() {\n    this.resourceCache = {};\n    this.loading = [];\n    this.callbacks = [];\n  }\n\n  load(resource) {\n    if (resource instanceof Array) {\n      resource.forEach(res => this._load(res));\n    } else this._load(resource);\n  }\n\n  _load(url) {\n    if (this.resourceCache[url]) return this.resourceCache[url];else {\n      this.loading.push(url);\n      const img = new Image();\n\n      img.onload = () => {\n        this.resourceCache[url] = img;\n        if (this.isReady()) this.callbacks.forEach(cb => cb());\n      };\n\n      img.src = url;\n      this.resourceCache[url] = img;\n    }\n  }\n\n  get(url) {\n    return this.resourceCache[url];\n  }\n\n  isReady() {\n    // let ready = true;\n    // for (let k in this.resourceCache) {\n    //     if (this.resourceCache.hasOwnProperty(k) && !(this.resourceCache[k]))\n    //         ready = false;\n    // };\n    // return ready;\n    let ready = true;\n    Object.keys(this.resourceCache).forEach(k => {\n      if (this.resourceCache.hasOwnProperty(k) && !this.resourceCache[k]) ready = false;\n    });\n    return ready;\n  }\n\n  onReady(func) {\n    this.callbacks.push(func);\n  }\n\n}\n\nexport default ResourceManager;","map":{"version":3,"sources":["/home/aseemar/Desktop/JS_Projects/MERN_stack_project/frontend/src/bummerman/resource_manager/resource_manager.js"],"names":["ResourceManager","constructor","resourceCache","loading","callbacks","load","resource","Array","forEach","res","_load","url","push","img","Image","onload","isReady","cb","src","get","ready","Object","keys","k","hasOwnProperty","onReady","func"],"mappings":"AAAA,MAAMA,eAAN,CAAsB;AAClBC,EAAAA,WAAW,GAAI;AACX,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACH;;AAEDC,EAAAA,IAAI,CAAEC,QAAF,EAAY;AACZ,QAAIA,QAAQ,YAAYC,KAAxB,EAA+B;AAC3BD,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,GAAG,IAAI,KAAKC,KAAL,CAAWD,GAAX,CAAxB;AACH,KAFD,MAEO,KAAKC,KAAL,CAAWJ,QAAX;AACV;;AAEDI,EAAAA,KAAK,CAAEC,GAAF,EAAO;AACR,QAAI,KAAKT,aAAL,CAAmBS,GAAnB,CAAJ,EAA6B,OAAO,KAAKT,aAAL,CAAmBS,GAAnB,CAAP,CAA7B,KACK;AACD,WAAKR,OAAL,CAAaS,IAAb,CAAkBD,GAAlB;AAEA,YAAME,GAAG,GAAG,IAAIC,KAAJ,EAAZ;;AACAD,MAAAA,GAAG,CAACE,MAAJ,GAAa,MAAM;AACf,aAAKb,aAAL,CAAmBS,GAAnB,IAA0BE,GAA1B;AACA,YAAI,KAAKG,OAAL,EAAJ,EAAoB,KAAKZ,SAAL,CAAeI,OAAf,CAAuBS,EAAE,IAAIA,EAAE,EAA/B;AACvB,OAHD;;AAIAJ,MAAAA,GAAG,CAACK,GAAJ,GAAUP,GAAV;AACA,WAAKT,aAAL,CAAmBS,GAAnB,IAA0BE,GAA1B;AACH;AACJ;;AAEDM,EAAAA,GAAG,CAAER,GAAF,EAAO;AACN,WAAO,KAAKT,aAAL,CAAmBS,GAAnB,CAAP;AACH;;AAEDK,EAAAA,OAAO,GAAI;AACP;AACA;AACA;AACA;AACA;AACA;AAEA,QAAII,KAAK,GAAG,IAAZ;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAKpB,aAAjB,EAAgCM,OAAhC,CAAwCe,CAAC,IAAI;AACzC,UAAI,KAAKrB,aAAL,CAAmBsB,cAAnB,CAAkCD,CAAlC,KAAwC,CAAE,KAAKrB,aAAL,CAAmBqB,CAAnB,CAA9C,EACIH,KAAK,GAAG,KAAR;AACP,KAHD;AAIA,WAAOA,KAAP;AACH;;AAEDK,EAAAA,OAAO,CAAEC,IAAF,EAAQ;AACX,SAAKtB,SAAL,CAAeQ,IAAf,CAAoBc,IAApB;AACH;;AAlDiB;;AAqDtB,eAAe1B,eAAf","sourcesContent":["class ResourceManager {\n    constructor () {\n        this.resourceCache = {};\n        this.loading = [];\n        this.callbacks = [];\n    }\n\n    load (resource) {\n        if (resource instanceof Array) {\n            resource.forEach(res => this._load(res));\n        } else this._load(resource);\n    }\n\n    _load (url) {\n        if (this.resourceCache[url]) return this.resourceCache[url];\n        else {\n            this.loading.push(url);\n\n            const img = new Image();\n            img.onload = () => {\n                this.resourceCache[url] = img;\n                if (this.isReady()) this.callbacks.forEach(cb => cb());\n            }\n            img.src = url;\n            this.resourceCache[url] = img;\n        }\n    }\n\n    get (url) {\n        return this.resourceCache[url];\n    }\n\n    isReady () {\n        // let ready = true;\n        // for (let k in this.resourceCache) {\n        //     if (this.resourceCache.hasOwnProperty(k) && !(this.resourceCache[k]))\n        //         ready = false;\n        // };\n        // return ready;\n\n        let ready = true;\n        Object.keys(this.resourceCache).forEach(k => {\n            if (this.resourceCache.hasOwnProperty(k) && !(this.resourceCache[k]))\n                ready = false;\n        });\n        return ready;\n    }\n\n    onReady (func) {\n        this.callbacks.push(func);\n    }\n}\n\nexport default ResourceManager;"]},"metadata":{},"sourceType":"module"}